buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    // Apply the java plugin to add support for Java
    itemId 'java'

    // Apply the application plugin to add support for building an application
    itemId 'application'
}

apply plugin: 'java'


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies{
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

apply plugin: 'javafx-gradle-plugin'


mainClassName = 'main.java.App'
version = '1.0'


// configure javafx-gradle-plugin
jfx {
    verbose = true
    mainClass = "App"
    jfxAppOutputDir = "build/jfx/app"
    jfxMainAppJarName = "estoque-jf.jar"
    deployDir = "src/main/deploy"
    useEnvironmentRelativeExecutables = true
    libFolderName = "lib"

    // gradle jfxJar
    css2bin = false
    preLoader = null // String
    updateExistingJar = false
    allPermissions = false
    manifestAttributes = null // Map<String, String>
    addPackagerJar = true
    copyAdditionalAppResourcesToJar = false
    skipCopyingDependencies = false
    useLibFolderContentForManifestClasspath = false
    fixedManifestClasspath = null

}

task copyDependenciesToTarget(type: Copy) {
    println 'Copying dependencies to target...'

    configurations.compile.collect().each { compileDependency ->
        copy {
            with from (compileDependency.getPath()) {
                include '*'
            }
            into 'target/libs/libs'
        }
    }
}

build.dependsOn(copyDependenciesToTarget)


jar {
    manifest {
        attributes 'Implementation-Title': 'Estoque App',
                'Implementation-Version': version,
                "Main-Class": "main.java.App",
                "Class-Path": configurations.compile.collect { 'libs/' + it.getName() }.join(' ')
    }
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
